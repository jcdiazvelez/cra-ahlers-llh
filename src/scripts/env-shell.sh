#!/bin/sh
#
# $Id: env-shell.sh.in 2333 2015-10-22 09:03:17Z boersma $
#
# Icetray environment script.
#
# THIS FILE WAS AUTOGENERATED.  ANY CHANGES YOU MAKE HERE WILL BE
# LOST.    IF YOU FIND YOURSELF NEEDING TO CHANGE THINGS HERE SEE
#
# http://wiki.icecube.wisc.edu/index.php/Shell_Configuration_Tips
# 
# [tds] If you need to change things here to make things work, that's
# a bug and you should *report* this to dataclass@icecube.wisc.edu or
# http://code.icecube.wisc.edu/projects/icecube/ .  Thanks for your help.  
#
eval `/cvmfs/icecube.opensciencegrid.org/py2-v1/setup.sh`
if [ "$1" = "help" ]
    then
    echo "Usage: $0 [SHELL]"
    echo "Spawn a new shell with an Icetray environment loaded"
    echo ""
    echo "SHELL can specified with or without a full path.  If SHELL"
    echo "is omitted the login shell is used by default."
    echo "Examples:"
    echo "   ./env-shell.sh"
    echo "   ./env-shell.sh tcsh"
    echo "   ./env-shell.sh /bin/tcsh"
    echo ""
    echo "To exit the Icetray environment simply exit the new shell."
    echo ""
    exit 1
fi

if [ -z "$1" ]
    then # user did not specify a shell
    NEW_SHELL=$SHELL 
    # only exit if no shell specified on command line *and* env already loaded 
    if [ -n "$ILLH_SHELL" ] 
	then  
	echo "****************************************************************"
	echo "You are currently in a shell with an Iter-LLH environment loaded."
	echo "Please exit the current shell and re-run $0 from a clean shell."
	echo "****************************************************************"
	echo "Environment not (re)loaded."
	exit 2
    fi
else
    NEW_SHELL=$1
    shift
    ARGV="$@"
fi

_ILLH_SHELL=$NEW_SHELL

_ILLH_SRC=/data/user/juancarlos/simpledst-maps/src
_ILLH_BUILD=/data/user/juancarlos/simpledst-maps/build
# If the ILLH_TESTDATA value at cmake time differs from the value
# that was set just prior to starting env-shell.sh, prefer the latter one.
# E.g.: user may have had both ILLH_PORTS and ILLH_TESTDATA undefined at cmake time,
# but then set ILLH_TESTDATA later.
_PYVER=`python -V 2>&1`

# Check for ILLH_BUILD mismatch
if [ -n "$ILLH_BUILD" -a "$ILLH_BUILD" != "$_ILLH_BUILD" ]
then
    echo "****************************************************************"
    echo "ILLH_BUILD CHANGED"
    echo "It appears that you are attempting to load an icetray environment different"
    echo "than the one already loaded"
    echo "          This ILLH_BUILD=$_ILLH_BUILD"
    echo "Already loaded ILLH_BUILD=$ILLH_BUILD"
    echo "****************************************************************"
    echo "Environment not (re)loaded."
    exit 2
fi

# Check for valid ROOTSYS
if [ -d "/cvmfs/icecube.opensciencegrid.org/py2-v1/RHEL_6_x86_64/i3ports/root-v5.34.18" ]; then

_ROOTSYS=/cvmfs/icecube.opensciencegrid.org/py2-v1/RHEL_6_x86_64/i3ports/root-v5.34.18
else
_ROOTSYS=''
fi

_LD_LIBRARY_PATH=/data/user/juancarlos/Healpix/install/lib:$LD_LIBRARY_PATH:$LD_LIBRARY_PATH
_DYLD_LIBRARY_PATH=/data/user/juancarlos/Healpix/install/lib:$DYLD_LIBRARY_PATH:$LD_LIBRARY_PATH
_PATH=${_ILLH_BUILD}:${_ROOTSYS}/bin:$PATH



TOPBAR="************************************************************************"
WIDTH=`echo "$TOPBAR" | wc -c`

WIDTH=$(( $WIDTH-2 ))

printctr()
{
    LEN=`echo "$*" | wc -c`
    LOFFSET=$(( ($WIDTH-$LEN)/2 ))
    ROFFSET=$(( $WIDTH-$LOFFSET-$LEN ))

    FORMAT="*%${LOFFSET}s%s%${ROFFSET}s*\n"
    printf $FORMAT " " "$*" " "
}

if [ -z "$ARGV" ]
    then
    printf "$TOPBAR\n"
    printctr ""
    printctr "W E L C O M E"
    printctr ""
    printctr ""
    printctr ""
    printf "$TOPBAR\n"
    printf "\n"
    printf "Icetray environment has:\n"
    printf "   ILLH_SRC       = %s\n" $_ILLH_SRC
    printf "   ILLH_BUILD     = %s\n" $_ILLH_BUILD
    echo   "   Python       =" $_PYVER
fi

if [ -z "$ILLH_SHELL" ] # a clean, first invocation
    then

    # GEANT4_ENV_VARS pulls in GEANT4 variables,
    # generated by cmake/make_geant4_env.py

    PATH=$_PATH \
	LD_LIBRARY_PATH=$_LD_LIBRARY_PATH \
	DYLD_LIBRARY_PATH=$_DYLD_LIBRARY_PATH \
	PYTHONPATH=$_PYTHONPATH \
	IH_CLASSPATH=$_IH_CLASSPATH \
        ILLH_PLATFORM="" \
	ILLH_SRC=$_ILLH_SRC \
	ILLH_BUILD=$_ILLH_BUILD \
	ILLH_PORTS=$_ILLH_PORTS \
	ILLH_TESTDATA=$_ILLH_TESTDATA \
	ROOTSYS=$_ROOTSYS \
	ILLH_SHELL=$_ILLH_SHELL \
	$NEW_SHELL "$@"

else  # not clean, use previous environment
    $NEW_SHELL "$@"
fi

STATUS=$?

if [ -z "$ARGV" ]
then
    echo "Exited ILLH Environment."
fi
exit $STATUS
